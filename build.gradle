plugins {
  id 'java-library'
  id 'maven-publish'
}

wrapper {
  gradleVersion = "${gradleVersion}"
}

group = 'org.serialthreads'
archivesBaseName = 'serialhtreads'
version = '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

dependencies {
  implementation "org.slf4j:slf4j-api:${slf4jVersion}"
  runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
  runtimeOnly "org.apache.logging.log4j:log4j-core:${log4jVersion}"

  implementation "org.ow2.asm:asm:${asmVersion}"
  implementation "org.ow2.asm:asm-analysis:${asmVersion}"
  implementation "org.ow2.asm:asm-tree:${asmVersion}"
  implementation "org.ow2.asm:asm-util:${asmVersion}"

  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testImplementation "org.assertj:assertj-core:${assertjVersion}"
}

jar {
  manifest {
    attributes(
      "Implementation-Title": "SerialThreads",
      "Implementation-Version": archiveVersion,
      "Premain-Class": "org.serialthreads.agent.Agent",
      "Agent-Class": "org.serialthreads.agent.Agent",
      "Can-Redefine-Classes": true,
      "Can-Retransform-Classes": false)
  }
}

task testJar(type: Jar) {
  archiveClassifier = 'tests'
  from sourceSets.test.output
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
    }
    maven(MavenPublication) {
      artifact testJar
    }
  }
}

test {
  // ignore failing tests
  ignoreFailures = true

  // workaround for gradle (included asm) not supporting jdk8
  scanForTestClasses = false
  // probably have to tweak the include and exclude patterns, depending on the naming scheme you use
  include '**/*Test.*'
  exclude '**/*Abstract*.*'
}
